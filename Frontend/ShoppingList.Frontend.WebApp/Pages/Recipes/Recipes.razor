@page "/recipes"

@using ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Recipes.Models;
@using ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Recipes.Services;
@using ProjectHermes.ShoppingList.Frontend.Models.Recipes.Models
@using global::ShoppingList.Frontend.Redux.Recipes.Actions

@inject NavigationManager _navigationManager;
@inject RecipesState _state;
@inject IRecipesApiService _apiService

@namespace ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Recipes

<div>
    <div class="d-flex">
        <div class="h4">Recipes</div>
        <Button @onclick="@OnCreateRecipeButtonClicked" Class="d-flex align-items-center ml-auto">
            <Icon Type="plus"></Icon>
        </Button>
    </div>
    <div>
        <Input TValue="string" @bind-value="@input" 
               OnPressEnter="@OnLoadButtonClickedAsync" 
               Placeholder="Recipe name ..."></Input>
        <Button @onclick="@OnLoadButtonClickedAsync" Class="mt-2">Load</Button>
    </div>
    <div>
        @foreach (var searchResult in _state.SearchResults)
        {
            <SearchResult Model="searchResult" TAction="EditRecipeAction"></SearchResult>
        }
    </div>
</div>

@code {
    private string input = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _state.ResetEditedRecipe();
    }

    private async Task OnLoadButtonClickedAsync()
    {
        if (string.IsNullOrWhiteSpace(input))
        {
            _state.RegisterSearchResults(Enumerable.Empty<RecipeSearchResult>());
            return;
        }

        var results = await _apiService.SearchAsync(input);
        _state.RegisterSearchResults(results);
    }

    private void OnCreateRecipeButtonClicked()
    {
        _navigationManager.NavigateTo($"recipes/{Guid.Empty}");
    }
}