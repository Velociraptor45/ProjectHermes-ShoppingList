@page "/recipes"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using ProjectHermes.ShoppingList.Frontend.Redux.Recipes.Actions
@using ProjectHermes.ShoppingList.Frontend.Redux.Recipes.States

@inject IDispatcher Dispatcher
@inject IState<RecipeState> State

@namespace ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Recipes

<div class="recipes">
    <div class="d-flex top-bar mt-2">
        <Tabs Class="recipe-search-tabs mr-2">
            <TabPane Tab="By Name" Key="1">
                <div class="d-flex">
                    <Input TValue="string" @bind-value="@input"
                           OnPressEnter="@OnLoadByNameButtonClicked"
                           Placeholder="Recipe name"
                           @ref="_searchInput"></Input>
                    <Button @onclick="@OnLoadByNameButtonClicked" Class="ml-1">
                        <i class="bi bi-search"></i>
                    </Button>
                </div>
            </TabPane>
            <TabPane Tab="By Tags" Key="2">
                <div class="d-flex">
                    <Select Mode="multiple"
                            ValueName="@nameof(RecipeTag.Id)"
                            LabelName="@nameof(RecipeTag.Name)"
                            DataSource="@State.Value.RecipeTags"
                            TItem="RecipeTag"
                            TItemValue="Guid"
                            AutoClearSearchValue="false"
                            OnSelectedItemsChanged="OnSelectedRecipeTagsChanged"
                            Values="@State.Value.Search.SelectedRecipeTagIds">
                    </Select>
                    <Button @onclick="@OnLoadByTagsButtonClicked" Class="ml-1">
                        <i class="bi bi-search"></i>
                    </Button>
                </div>
            </TabPane>
        </Tabs>
        <Tooltip Placement="Placement.BottomRight" Title="@("Create new recipe")">
            <Button @onclick="@OnCreateRecipeButtonClicked" Class="d-flex align-items-center ml-auto mt-2"
                    Type="@ButtonType.Primary">
                <Icon Type="plus"></Icon>
            </Button>
        </Tooltip>
    </div>
    <div class="mt-2">
        @if(_searchTriggeredOnce && State.Value.Search.SearchResults.Count == 0)
        {
            <div class="no-recipes-found-notice">
                No recipes found
            </div>
        }
        @foreach (var searchResult in State.Value.Search.SearchResults)
        {
            <SearchResult Model="searchResult" TAction="EditRecipeAction"></SearchResult>
        }
    </div>
</div>

@code {
    private string input = "";
    private Input<string> _searchInput;
    private bool _searchTriggeredOnce = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new EnterRecipeSearchPageAction());
        Dispatcher.Dispatch(new LoadRecipeTagsAction());
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
            _searchInput.Focus();
    }

    private void OnLoadByNameButtonClicked()
    {
        _searchTriggeredOnce = true;
        Dispatcher.Dispatch(new SearchRecipeByNameAction(input));
    }

    private void OnLoadByTagsButtonClicked()
    {
        _searchTriggeredOnce = true;
        Dispatcher.Dispatch(new SearchRecipeByTagsAction());
    }

    private void OnCreateRecipeButtonClicked()
    {
        Dispatcher.Dispatch(new EditRecipeAction
        {
            Id = Guid.Empty
        });
    }

    private void OnSelectedRecipeTagsChanged(IEnumerable<RecipeTag> selectedRecipeTags)
    {
        var tagIds = selectedRecipeTags.Select(r => r.Id).ToList();
        Dispatcher.Dispatch(new SelectedSearchRecipeTagIdsChangedAction(tagIds));
    }
}