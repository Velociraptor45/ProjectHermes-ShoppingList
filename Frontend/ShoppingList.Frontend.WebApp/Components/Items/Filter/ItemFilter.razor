@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using global::ShoppingList.Frontend.Redux.Items.Actions.Editor
@using global::ShoppingList.Frontend.Redux.Items.Actions.Search
@using global::ShoppingList.Frontend.Redux.Items.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div class="d-flex">
    <div class="h4">Items</div>
    <Button @onclick="OnCreateItemButtonClicked" Class="d-flex align-items-center ml-auto">
        <Icon Type="plus"></Icon>
    </Button>
</div>
<div class="mb-2">
    <Tabs>
        <TabPane Tab="Search" Key="1">
            <ItemSearchTab></ItemSearchTab>
        </TabPane>
        <TabPane Tab="Filter" Key="2">
            <ItemFilterTab></ItemFilterTab>
        </TabPane>
    </Tabs>
</div>
<div>
    <!-- result item list -->
    @foreach (var item in State.Value.Search.SearchResults)
    {
        <SearchResult Model="item" TAction="EditItemAction"></SearchResult>
    }
</div>

@code {
    private void OnCreateItemButtonClicked()
    {
        Dispatcher.Dispatch(new EditItemAction
        {
            Id = Guid.Empty
        });
    }
}