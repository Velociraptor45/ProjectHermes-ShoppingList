@using ProjectHermes.ShoppingList.Frontend.Models;
@using ProjectHermes.ShoppingList.Frontend.Models.Items;
@using ProjectHermes.ShoppingList.Frontend.WebApp.Pages.Items.Services.ItemEditor
@using ProjectHermes.ShoppingList.Frontend.WebApp.Services.Error;

@inject IItemEditorApiService apiService;

<div class="ml-3">
    <div class="font-weight-bold">Manufacturer</div>
    <SingleSelect
        Class="mt-1 min-w-150"
        TItem="Manufacturer"
        TValue="Guid"
        ValueName="@nameof(Manufacturer.Id)"
        LabelName="@nameof(Manufacturer.Name)"
        DataSource="@State.Manufacturers.ToList()"
        OnItemChanged="@OnManufacturerChanged"
        OnItemAdded="@OnNewManufacturerCreated"
        Placeholder="Manufacturer"
        DefaultValue="@State.EditedItem.ManufacturerId.GetValueOrDefault()"
        CanAddItem="true"
        AllowClear="true">
    </SingleSelect>
</div>

@code {
    [Parameter] public ItemsState State { get; set; }
    [Parameter] public IAsyncRetryFragmentCreator FragmentCreator { get; set; }

    private void OnManufacturerChanged(Manufacturer manufacturer)
    {
        State.EditedItem.ManufacturerId = manufacturer?.Id;
    }

    private async Task OnNewManufacturerCreated(string name)
    {
        await apiService.CreateManufacturerAsync(name, FragmentCreator, async () =>
        {
            await State.ManufacturerCreated();
            StateHasChanged();
        });
    }
}