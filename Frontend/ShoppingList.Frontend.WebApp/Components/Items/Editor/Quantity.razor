@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using Fluxor
@using global::ShoppingList.Frontend.Redux.Items.Actions
@using global::ShoppingList.Frontend.Redux.Items.Actions.Editor
@using global::ShoppingList.Frontend.Redux.Items.States
@using global::ShoppingList.Frontend.Redux.Shared.States

@inject IState<ItemState> State
@inject IDispatcher Dispatcher

<div class="d-flex flex-row py-2">
    <div>
        <div class="font-weight-bold">Quantity&nbsp;Type</div>
        <SingleSelect 
            Class="max-w-100 mt-1"
            TItem="QuantityType"
            TValue="int"
            ValueName="@nameof(QuantityType.Id)"
            LabelName="@nameof(QuantityType.Name)"
            Placeholder="QuantityType"
            DefaultValue="@State.Value.Editor.Item!.QuantityType.Id"
            DataSource="@State.Value.QuantityTypes.ToList()"
            OnItemChanged="@OnQuantityTypeChanged">
        </SingleSelect>
    </div>
    @if (State.Value.Editor.Item.QuantityType.Id == 0)
    {
        <div class="ml-4 d-flex">
            <div>
                <div class="font-weight-bold">In&nbsp;Packet</div>
                <SingleSelect 
                    Class="mt-1"
                    TItem="QuantityTypeInPacket"
                    TValue="int"
                    ValueName="@nameof(QuantityTypeInPacket.Id)"
                    LabelName="@nameof(QuantityTypeInPacket.Name)"
                    Placeholder="QuantityInPacketType"
                    DefaultValue="@State.Value.Editor.Item.QuantityInPacketType!.Id"
                    DataSource="@State.Value.QuantityTypesInPacket.ToList()"
                    OnItemChanged="@OnQuantityInPacketTypeChanged">
                </SingleSelect>
            </div>
            <div class="d-flex align-self-end">
                <div class="ml-2 d-flex in-packet">
                    <div>
                        <Input TValue="float"
                               Value="@State.Value.Editor.Item.QuantityInPacket!.Value" 
                               OnChange="OnQuantityInPacketChanged" />
                    </div>
                    <div class="mt-1">@State.Value.Editor.Item.QuantityInPacketType.QuantityLabel</div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private void OnQuantityTypeChanged(QuantityType quantityType)
    {
        //State.EditedItem.QuantityType = quantityType;
        //if (quantityType.Id == 1)
        //{
        //    State.EditedItem.QuantityInPacket = null;
        //    State.EditedItem.QuantityInPacketType = null;
        //}
        //else if(State.EditedItem.QuantityInPacketType is null)
        //{
        //    State.EditedItem.QuantityInPacket = 1;
        //    State.EditedItem.QuantityInPacketType = State.QuantityTypesInPacket.First();
        //}

        //State.StateChanged();
        Dispatcher.Dispatch(new QuantityTypeChangedAction(quantityType));
    }

    private void OnQuantityInPacketTypeChanged(QuantityTypeInPacket quantityTypeInPacket)
    {
        //State.EditedItem.QuantityInPacketType = quantityTypeInPacket;
        Dispatcher.Dispatch(new QuantityTypeInPacketChangedAction(quantityTypeInPacket));
    }

    private void OnQuantityInPacketChanged(float quantity)
    {
        Dispatcher.Dispatch(new ItemQuantityInPacketChangedAction(quantity));
    }
}