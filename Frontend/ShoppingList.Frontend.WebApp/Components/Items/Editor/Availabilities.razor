@using ProjectHermes.ShoppingList.Frontend.Models.Items;

<div>
    <div class="mt-3 d-flex justify-content-start align-items-center">
        <div class="font-weight-bold mr-2">Stores</div>
        <Button class="d-flex align-items-center" OnClick="OnAddStoreButtonClicked"
                Disabled="@(!State.EditedItem.GetNotRegisteredStores(State.Stores).Any())">
            <Icon Type="plus"></Icon>
        </Button>
    </div>
    <div class="d-flex flex-row py-2">
        <div>
            @for (int i = 0; i < State.EditedItem.Availabilities.Count; i++)
            {
                <div class="pb-1">
                    <Availability State="@State"
                                  ComponentIndex="i"></Availability>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public ItemsState State { get; set; }

    private void OnAddStoreButtonClicked()
    {
        var availableStores = State.EditedItem.GetNotRegisteredStores(State.Stores);
        if (!availableStores.Any())
            return;

        var chosenStore = availableStores.First();
        State.EditedItem.Availabilities.Add(
            new StoreItemAvailability(chosenStore, 1, GetSectionForStoreId(chosenStore.Id)));

        StateHasChanged();
    }

    private StoreItemSection GetSectionForStoreId(int storeId)
    {
        var section = State.Stores.Single(s => s.Id == storeId).Sections.Single(s => s.IsDefaultSection);
        return section.AsStoreItemSection();
    }
}