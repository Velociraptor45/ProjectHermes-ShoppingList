@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using System.Threading
@using Fluxor
@using ProjectHermes.ShoppingList.Frontend.Redux.ShoppingList.Actions.SearchBar
@using ProjectHermes.ShoppingList.Frontend.Redux.ShoppingList.States
@using ShoppingListState = global::ProjectHermes.ShoppingList.Frontend.Redux.ShoppingList.States.ShoppingListState

@inject IState<ShoppingListState> State
@inject IDispatcher Dispatcher

<div class="mb-2 d-flex">
    <Select OnFocus="OnSearchBarFocusIn"
            Class="@(State.Value.SearchBar.IsActive ? "ml-1 mr-2 w-100 cursor-text" : "mx-1 w-100 cursor-text")"
            Placeholder="Search for item..."
            ValueName="@nameof(SearchItemForShoppingListResult.SelectIdentifier)"
            LabelName="@nameof(SearchItemForShoppingListResult.DisplayValue)"
            DataSource="State.Value.SearchBar.Results"
            TItem="SearchItemForShoppingListResult"
            TItemValue="string"
            OnSelectedItemChanged="OnSearchItemSelectedAsync"
            AllowClear="true"
            IgnoreItemChanges="false"
            AutoClearSearchValue="true"
            EnableSearch
            Value="State.Value.SearchBar.Input"
            OnSearch="OnSearchInputChanged">
    </Select>

    @if (State.Value.SearchBar.IsActive)
    {
        <TemporaryItemCreator></TemporaryItemCreator>
        <Button Class="mx-1" OnClick="@OnSearchBarCancelButtonClicked">Cancel</Button>
    }
</div>

@code {
    private void OnSearchInputChanged(string input)
    {
        Dispatcher.Dispatch(new ItemForShoppingListSearchInputChangedAction(input));
    }

    private void OnSearchItemSelectedAsync(SearchItemForShoppingListResult item)
    {
        if (item == null)
            return;

        Dispatcher.Dispatch(new ItemForShoppingListSearchResultSelectedAction(item));
    }

    private void OnSearchBarCancelButtonClicked()
    {
        Dispatcher.Dispatch(new SetSearchBarInactiveAction());
    }

    private void OnSearchBarFocusIn()
    {
        Dispatcher.Dispatch(new SetSearchBarActiveAction());
    }
}