name: Build
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Restore
        run: |
          dotnet restore Api/ShoppingListApi.sln
          dotnet restore Frontend/ShoppingList.Frontend.sln
      # - name: Install dotnet-coverage
      #   run: |
      #     dotnet tool install --global dotnet-coverage
      - name: Begin Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Velociraptor45_ProjectHermes-ShoppingList" /o:"velociraptor45" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions=**/*TestTools*/** /d:sonar.cs.vscoveragexml.reportsPaths=Api/TestResults/coverage.cobertura.xml,Frontend/TestResults/coverage.cobertura.xml
      - name: Build Backend
        run: |
          dotnet build Api/ShoppingListApi.sln
      - name: Copy client dlls
        run: |
          cp Api/ShoppingList.Api.Client/bin/Debug/netstandard2.1/*.dll Frontend/ShoppingList.Frontend.WebApp/
      - name: Build Frontend
        run: |
          dotnet build Frontend/ShoppingList.Frontend.sln
      - name: Test
        run: |
          dotnet test ./Api/ShoppingListApi.sln --logger:trx --results-directory TestResults "/p:CollectCoverage=true" "/p:CoverletOutput=../TestResults/" "/p:MergeWith=../TestResults/coverlet.json" "/p:CoverletOutputFormat=\"json,cobertura\""
          dotnet test ./Frontend/ShoppingList.Frontend.sln --logger:trx --results-directory TestResults "/p:CollectCoverage=true" "/p:CoverletOutput=../TestResults/" "/p:MergeWith=../TestResults/coverlet.json" "/p:CoverletOutputFormat=\"json,cobertura\""
      - name: Dirs
        run: |
          ls -l .
          ls -l Api/
          ls -l Frontend/
          ls -l TestResults/
          ls -l Api/TestResults/
          ls -l Frontend/TestResults/
      # - name: Test
      #   run: |
      #     dotnet-coverage collect 'dotnet test Api/ShoppingListApi.sln --no-build' -f xml  -o 'api/coverage.xml'
      #     dotnet-coverage collect 'dotnet test Frontend/ShoppingList.Frontend.sln --no-build' -f xml  -o 'frontend/coverage.xml'
      - name: End Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
